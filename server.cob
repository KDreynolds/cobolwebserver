IDENTIFICATION DIVISION.
PROGRAM-ID. COBOL-WEB-SERVER.

ENVIRONMENT DIVISION.
CONFIGURATION SECTION.
SPECIAL-NAMES.
    CALL-CONVENTION 1 IS STDCALL.

INPUT-OUTPUT SECTION.
FILE-CONTROL.
    SELECT STATIC-FILE ASSIGN TO WS-FILENAME
        ORGANIZATION IS LINE SEQUENTIAL
        FILE STATUS IS WS-FILE-STATUS.

DATA DIVISION.
FILE SECTION.
FD STATIC-FILE.
01 STATIC-FILE-RECORD PIC X(1024).

WORKING-STORAGE SECTION.
01 WS-SERVER-SOCKET PIC 9(9) COMP.
01 WS-CLIENT-SOCKET PIC 9(9) COMP.
01 WS-PORT PIC 9(5) VALUE 8080.
01 WS-BUFFER PIC X(1024).
01 WS-BUFFER-SIZE PIC 9(9) COMP VALUE 1024.
01 WS-BYTES-RECEIVED PIC 9(9) COMP.
01 WS-REQUEST-METHOD PIC X(10).
01 WS-REQUEST-PATH PIC X(100).
01 WS-HTTP-VERSION PIC X(10).
01 WS-FILENAME PIC X(100).
01 WS-FILE-STATUS PIC XX.
01 WS-EOF PIC X VALUE 'N'.
01 WS-STATUS-CODE PIC 9(3).
01 WS-RESPONSE PIC X(20480).
01 WS-RESPONSE-PARTS.
   05 WS-STATUS-LINE PIC X(50).
   05 WS-HEADERS.
      10 WS-CONTENT-TYPE PIC X(50) VALUE "Content-Type: text/html".
      10 WS-NEWLINE PIC X(2) VALUE X"0D0A".
   05 WS-BODY PIC X(20000).
01 WS-RESPONSE-LENGTH PIC 9(9) COMP.
01 WS-RESPONSE-LENGTH-STR PIC Z(9)9.
01 WS-BODY-POINTER PIC 9(5) COMP.
01 WS-BODY-LENGTH PIC 9(5) COMP VALUE 0.


01 INIT-SERVER USAGE IS PROGRAM-POINTER.
01 ACCEPT-CONNECTION USAGE IS PROGRAM-POINTER.
01 READ-REQUEST USAGE IS PROGRAM-POINTER.
01 SEND-RESPONSE USAGE IS PROGRAM-POINTER.
01 CLOSE-SOCKET USAGE IS PROGRAM-POINTER.
01 LIB-HANDLE USAGE IS POINTER.
01 INIT-FUNCTIONS USAGE IS PROGRAM-POINTER.

PROCEDURE DIVISION.

MAIN-PROCEDURE.
    CALL "dlopen" USING
        BY CONTENT Z"/home/frey/Documents/Dev/cobolwebserver/libserver.so" & X"00"
        BY VALUE 1
        RETURNING LIB-HANDLE
    END-CALL
    IF LIB-HANDLE = NULL
        DISPLAY "Failed to load libserver.so"
        STOP RUN
    END-IF

    CALL "dlsym" USING
        BY VALUE LIB-HANDLE
        BY CONTENT Z"init_functions" & X"00"
        RETURNING INIT-FUNCTIONS
    END-CALL
    IF INIT-FUNCTIONS = NULL
        DISPLAY "Failed to find init_functions"
        STOP RUN
    END-IF

    CALL INIT-FUNCTIONS USING
        BY REFERENCE INIT-SERVER
        BY REFERENCE ACCEPT-CONNECTION
        BY REFERENCE READ-REQUEST
        BY REFERENCE SEND-RESPONSE
        BY REFERENCE CLOSE-SOCKET
    END-CALL

    PERFORM INITIALIZE-SERVER
    PERFORM ACCEPT-CONNECTIONS
    STOP RUN.

INITIALIZE-SERVER.
    CALL INIT-SERVER USING BY VALUE WS-PORT
                     RETURNING WS-SERVER-SOCKET
    IF WS-SERVER-SOCKET = -1
        DISPLAY "Failed to initialize server"
        STOP RUN
    END-IF
    DISPLAY "Server initialized on port " WS-PORT.

ACCEPT-CONNECTIONS.
    PERFORM FOREVER
        CALL ACCEPT-CONNECTION USING BY VALUE WS-SERVER-SOCKET
                               RETURNING WS-CLIENT-SOCKET
        IF WS-CLIENT-SOCKET = -1
            DISPLAY "Failed to accept connection"
        ELSE
            PERFORM HANDLE-CLIENT
        END-IF
    END-PERFORM.

HANDLE-CLIENT.
    PERFORM PROCESS-REQUEST
    PERFORM PREPARE-RESPONSE
    PERFORM CLOSE-CONNECTION.

PROCESS-REQUEST.
    MOVE SPACES TO WS-BUFFER
    CALL READ-REQUEST USING BY VALUE WS-CLIENT-SOCKET
                            BY REFERENCE WS-BUFFER
                            BY VALUE WS-BUFFER-SIZE
                      RETURNING WS-BYTES-RECEIVED
    DISPLAY "Bytes received: " WS-BYTES-RECEIVED
    IF WS-BYTES-RECEIVED > 0
        DISPLAY "Received request:"
        DISPLAY FUNCTION TRIM(WS-BUFFER)
        PERFORM PARSE-REQUEST
    ELSE
        DISPLAY "Error reading request or connection closed"
    END-IF.

PARSE-REQUEST.
    UNSTRING WS-BUFFER DELIMITED BY SPACE
        INTO WS-REQUEST-METHOD
             WS-REQUEST-PATH
             WS-HTTP-VERSION
    END-UNSTRING
    DISPLAY "Method: " WS-REQUEST-METHOD
    DISPLAY "Path: " WS-REQUEST-PATH
    DISPLAY "HTTP Version: " WS-HTTP-VERSION.

PREPARE-RESPONSE.
    MOVE SPACES TO WS-BODY
    MOVE 1 TO WS-BODY-POINTER
    MOVE "static" TO WS-FILENAME
    STRING WS-FILENAME DELIMITED BY SPACE
           "/" DELIMITED BY SIZE
           FUNCTION TRIM(WS-REQUEST-PATH) DELIMITED BY SIZE
           INTO WS-FILENAME
    IF WS-REQUEST-PATH = "/"
        STRING WS-FILENAME DELIMITED BY SPACE
               "index.html" DELIMITED BY SIZE
               INTO WS-FILENAME
    END-IF
    DISPLAY "Attempting to open file: " WS-FILENAME
    OPEN INPUT STATIC-FILE
    DISPLAY "File status: " WS-FILE-STATUS
    IF WS-FILE-STATUS = "00"
        PERFORM READ-FILE-CONTENT
        CLOSE STATIC-FILE
        MOVE 200 TO WS-STATUS-CODE
    ELSE
        MOVE "File not found" TO WS-BODY
        MOVE 404 TO WS-STATUS-CODE
    END-IF
    PERFORM SEND-HTTP-RESPONSE.

READ-FILE-CONTENT.
    MOVE SPACES TO WS-BODY
    MOVE 0 TO WS-BODY-LENGTH
    MOVE 'N' TO WS-EOF
    PERFORM UNTIL WS-EOF = 'Y'
        READ STATIC-FILE
            AT END
                MOVE 'Y' TO WS-EOF
                DISPLAY "Reached end of file"
            NOT AT END
                DISPLAY "Read record: '" FUNCTION TRIM(STATIC-FILE-RECORD) "'"
                DISPLAY "Record length: " FUNCTION LENGTH(FUNCTION TRIM(STATIC-FILE-RECORD))
                STRING FUNCTION TRIM(STATIC-FILE-RECORD) DELIMITED BY SIZE
                       X"0A" DELIMITED BY SIZE
                       INTO WS-BODY WITH POINTER WS-BODY-LENGTH
                ADD FUNCTION LENGTH(FUNCTION TRIM(STATIC-FILE-RECORD)) 1 TO WS-BODY-LENGTH
        END-READ
    END-PERFORM
    SUBTRACT 1 FROM WS-BODY-LENGTH
    DISPLAY "Total body content: '" WS-BODY(1:WS-BODY-LENGTH) "'"
    DISPLAY "Body length: " WS-BODY-LENGTH.


SEND-HTTP-RESPONSE.
    MOVE WS-BODY-LENGTH TO WS-RESPONSE-LENGTH
    MOVE WS-RESPONSE-LENGTH TO WS-RESPONSE-LENGTH-STR
    DISPLAY "Body length: " WS-RESPONSE-LENGTH
    IF WS-STATUS-CODE = 200
        MOVE "HTTP/1.1 200 OK" TO WS-STATUS-LINE
    ELSE
        MOVE "HTTP/1.1 404 Not Found" TO WS-STATUS-LINE
    END-IF
    STRING WS-STATUS-LINE DELIMITED BY SIZE
           X"0D0A" DELIMITED BY SIZE
           "Content-Type: text/html" DELIMITED BY SIZE
           X"0D0A" DELIMITED BY SIZE
           "Content-Length: " DELIMITED BY SIZE
           FUNCTION TRIM(WS-RESPONSE-LENGTH-STR) DELIMITED BY SIZE
           X"0D0A" DELIMITED BY SIZE
           X"0D0A" DELIMITED BY SIZE
           WS-BODY(1:WS-BODY-LENGTH) DELIMITED BY SIZE
           INTO WS-RESPONSE
    MOVE FUNCTION LENGTH(FUNCTION TRIM(WS-RESPONSE)) TO WS-RESPONSE-LENGTH
    DISPLAY "Full response length: " WS-RESPONSE-LENGTH
    DISPLAY "Full response: " FUNCTION TRIM(WS-RESPONSE)
    CALL SEND-RESPONSE USING BY VALUE WS-CLIENT-SOCKET
                             BY REFERENCE WS-RESPONSE
                             BY VALUE WS-RESPONSE-LENGTH.

CLOSE-CONNECTION.
    CALL CLOSE-SOCKET USING BY VALUE WS-CLIENT-SOCKET.

END PROGRAM COBOL-WEB-SERVER.
